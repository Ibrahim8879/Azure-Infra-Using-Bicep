name: 'Bicep Unit Tests'

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled]
    branches:
      - main
    paths:
      - 'src/iac/az-controllers/azure-services/client/**'
      - 'src/iac/az-controllers/azure-services/shared/**'
      - 'src/params/dev/**'

env:
  LOCATION: "southcentralus"
  
permissions:
  id-token: write
  contents: read
  security-events: write
  actions: read
  pull-requests: read   # 👈 required to fetch files list

jobs:
  pre-checks:
    name: Collect PR info
    runs-on: ubuntu-latest
    outputs:
      labels: ${{ steps.collect.outputs.labels }}
      files: ${{ steps.collect.outputs.files }}
    steps:
      - name: Collect labels and changed files
        id: collect
        uses: actions/github-script@v7
        with:
          script: |
            const labels = context.payload.pull_request.labels.map(l => l.name);
            const files = await github.paginate(
              github.rest.pulls.listFiles, {
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
              }
            );
            const filenames = files.map(f => f.filename);

            core.setOutput("labels", JSON.stringify(labels));
            core.setOutput("files", JSON.stringify(filenames));

  shared-job:
    name: 'Shared Tests'
    runs-on: ubuntu-latest
    needs: pre-checks
    if: |
      contains(fromJSON(needs.pre-checks.outputs.labels), 'shared') &&
      (
        contains(join(fromJSON(needs.pre-checks.outputs.files), ' '), 'src/iac/az-controllers/azure-services/shared/') ||
        contains(join(fromJSON(needs.pre-checks.outputs.files), ' '), 'src/params/dev/main.bicepparam')
      )
    steps:
      - uses: actions/checkout@v3
      - run: echo "✅ Running SHARED tests in $LOCATION..."

  client-job:
    name: 'Client Tests'
    runs-on: ubuntu-latest
    needs: [pre-checks, shared-job]
    if: always() && contains(join(fromJSON(needs.pre-checks.outputs.labels), ' '), 'client-')
    steps:
      - uses: actions/checkout@v3
      - name: Run client deployments
        run: |
          labels=$(echo '${{ needs.pre-checks.outputs.labels }}' | jq -r '.[]' | grep '^client-' || true)
          files=$(echo '${{ needs.pre-checks.outputs.files }}' | jq -r '.[]')

          if [ -z "$labels" ]; then
            echo "No client-* labels found."
            exit 0
          fi

          for label in $labels; do
            client_name="${label#client-}"
            bicep_file="src/iac/az-controllers/azure-services/client/${client_name}.bicep"
            param_file="src/params/dev/${client_name}.bicepparam"

            if grep -q "$bicep_file" <<< "$files" || grep -q "$param_file" <<< "$files"; then
              echo "🚀 Running deployment for client: $client_name"
            else
              echo "⚠️ Skipping $client_name — no relevant file changes"
            fi
          done