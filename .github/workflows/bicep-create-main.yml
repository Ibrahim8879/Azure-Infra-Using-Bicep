name: Azure ARM

on:
  pull_request:
    types:
      - closed
    branches:
      - main

permissions:
  id-token: write
  contents: read
  actions: read
  pull-requests: write

jobs:
  pre-checks:
    name: Collect PR info
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      labels: ${{ steps.collect.outputs.labels }}
      files: ${{ steps.collect.outputs.files }}
    steps:
      - name: Collect labels and changed files
        id: collect
        uses: actions/github-script@v7
        with:
          script: |
            const labels = context.payload.pull_request.labels.map(l => l.name);
            const files = await github.paginate(
              github.rest.pulls.listFiles, {
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
              }
            );
            const filenames = files.map(f => f.filename);
            core.setOutput("labels", JSON.stringify(labels));
            core.setOutput("files", JSON.stringify(filenames));

      - name: Checkout merged commit
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}

  shared:
    needs: pre-checks
    if: github.event.pull_request.merged == true
    uses: ./.github/workflows/bicep-create-shared.yml
    with:
      labels: ${{ needs.pre-checks.outputs.labels }}
      files: ${{ needs.pre-checks.outputs.files }}
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ADMIN_KEYVAULT_SECRETS: ${{ secrets.ADMIN_KEYVAULT_SECRETS }}

  clients:
    needs: [pre-checks, shared]
    if: github.event.pull_request.merged == true && (needs.shared.result == 'success' || needs.shared.result == 'skipped')
    uses: ./.github/workflows/bicep-create-client.yml
    with:
      labels: ${{ needs.pre-checks.outputs.labels }}
      files: ${{ needs.pre-checks.outputs.files }}
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 
      TALOS_KEYVAULT_SECRETS: ${{ secrets.TALOS_KEYVAULT_SECRETS }}
